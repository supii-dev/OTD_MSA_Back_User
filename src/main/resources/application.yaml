constants:
  file:
    upload-directory: /home/green/download
    challenge: files
    profile-pic: profile
    pointshop-pic: pointshop
  feign-client:
    weather-api:
      url: https://apis.data.go.kr/1360000/VilageFcstInfoService_2.0
      service-key: fte7et4WjQ2QQTSP51SJ6VZ%2FXA3aDUYv054aZFUsGdrVOKFJxQnmrKJGh%2Box%2FcnwsvpeJmLazXr4je1K01Uoow%3D%3D
      data-type: json
    life:
      name: otd-life
      url: http://localhost:8083
  profile:
    base-url: "http://localhost:8080/porfile"
  comment:
    start-index: 0
    need-for-view-count: 3 #피드 리스트를 뿌릴 때 실제로 피드당 보여지는 댓글 수
  jwt:
    issuer: otd@otd.com #토큰 발행자
    bearer-format: JWT

    claim-key: signedUser
    header-key : Authorization
    secret-key: DaeguGreenArtAcademyClass502RoomForProjectOneTwoDayFighting

    domain: greenart.n-e.kr

    access-token-cookie-name: access-token
    access-token-cookie-path: / #모든 경로에서 access-token값이 넘어온다.
    access-token-cookie-validity-seconds: 900 # 15분 (s) 60 * 15
    access-token-validity-milliseconds: 900_000 # 15분 (ms) 60 * 15 * 1000

    refresh-token-cookie-name: refresh-token
    refresh-token-cookie-path: /api/OTD/user/reissue #해당 path때만 refresh-token값이 넘어온다.
    # refresh-token-cookie-path: / #해당 path때만 refresh-token값이 넘어온다.
    refresh-token-cookie-validity-seconds: 1_296_000 # 15일 (s) 60 * 60 * 24 * 15
    refresh-token-validity-milliseconds: 1_296_000_000 # 15일 (ms) 60 * 60 * 24 * 15 * 1000

    register-token:
      expiration-time: 1800000  # 30분 (밀리초)
  oauth2:
    base-uri: /oauth2/authorization #FE 소셜로그인 요청할 때 사용할 주소값
    # 플랫폼과 통신을 3번 정도 하는데 각 통신들이 하나의 작업을 위한 트랜잭션이라는 것을
    # 연결시키기 위해 쿠키를 사용한다.
    authorization-request-cookie-name: oauth2_auth_request
    redirect-uri-param-cookie-name: redirect_uri
    redirection-baseUri: /*/oauth2/code/*
    cookie-expiry-seconds: 180
    authorized-redirect-uris:
      - http://localhost:5173/otd/fe/redirect
      - http://localhost:5175/otd/fe/redirect
      - http://112.222.157.157:5174/otd/fe/redirect
  pay:
    kakao:
      base-url: https://open-api.kakaopay.com/online/v1/payment
      data:
        approval-url: http://localhost:5173/pay/approval
        authorization-name: Authorization
        cancel-url: http://localhost:5173/pay/cancel
        cid: TC0ONETIME #테스트용 가맹점 코드
        fail-url: http://localhost:5173/pay/fail
        kakao-pay-info-session-name: kakao-pay-info
        secret-key: DEV0A2C37B3D5C593158404BA2DEF241C594D526 #테스트용 secretKey

spring:
  application:
    name: otd-user
  task:
    scheduling:
      enabled: true
      pool:
        size: 2
    # 이메일 설정
    out-of-order: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: hwangsubin93@gmail.com
    password: dpdy fqcf kvgg fure
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true
    default-encoding: UTF-8
  datasource:
    #    url: jdbc:log4jdbc:mariadb://localhost/otd
    #    username: root
    #    password: green502
    url: jdbc:log4jdbc:mariadb://112.222.157.157:5012/hsb
    username: hsb
    password: green502
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000     # 5분
      max-lifetime: 1800000    # 30분
      connection-timeout: 30000
  jackson:
    default-property-inclusion: non_null # 응답 JSON에서 null인 속성은 제외
  jpa:
    database: mysql
    defer-datasource-initialization: false
    #defer-datasource-initialization: true #JPA 테이블 생성 이후 data.sql
    hibernate:
      ddl-auto: none
#      ddl-auto: update
      #ddl-auto: validate #entity 엔티티에 새로운거 추가할때 sql ALTER TABLE로 추가한뒤 시작해야함
    #     ddl-auto: update #entity 수정이 파악되면 테이블을 수정한다.
    #      ddl-auto: create #프로젝트 실행시마다 테이블을 모두 drop 후 create한다.
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true #쿼리문 로그를 찍어줄 때 보기편하게 포맷팅
        order_updates: true
        show_sql: true
        jdbc:
          batch_size: 20
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize #카카오 인가코드 요청 URL
            token-uri: https://kauth.kakao.com/oauth/token #토큰(JWT) 받을 때 사용하는 URL
            user-info-uri: https://kapi.kakao.com/v2/user/me #유저 정보 얻을 때 사용하는 URL
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
        registration:
          google:
            client-id: abc
            client-secret: abc
            scope:
              - email
              - profile
          kakao:
            client-name: Kakao
            client-id: ea7335b63181c9ea13d1e2ca858e03f8
            client-secret: ZXQ6kO4UeooM0Nauxmqb5shOafur5cf4
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
            # baseUrl: 서버가 돌아가고 있는 host 주소값
            # action: login
            # registrationId: kakao
            # 결과: (만약 localhost:8080으로 동작 중이면)
            #       http://localhost8080/login/oauth2/code/kakao
          naver:
            client-name: Naver
            client-id: P72KoAqAMzH5sNgVCdYF
            client-secret: 82rDV1lZi5
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - name
              - email
              - profile_image
              - nickname


  servlet:
    multipart:
      max-file-size: 15MB
      enabled: true
      max-request-size: 15MB
  sql:
    init:
    #  mode: always

server:
  port: 8082
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: mappers/**/*.xml

logging:
  level:
    org.springframework.web: DEBUG

    org.springframework.web.reactive.handler=DEBUG:
    org.springframework.web.reactive.result.method.annotation=DEBUG: